package com.drools;

import java.util.ArrayList
import javafx.scene.control.ChoiceDialog
import java.util.Optional
import javafx.scene.control.Label
import java.util.List
import java.util.Arrays
import com.jfoenix.controls.JFXButton
import javafx.scene.control.Alert

global com.jfoenix.controls.JFXButton nextButton

//======================================================================================DEKLARACJE KLAS=================================================================
declare Client
    cares_about : String
    meaningOfSoul: String
    kindOfStyle: String
    statement:String
    whyTechnicallyNovel: String
    whyReliabilityBoreHim: String
    shouldItBeQuick: String
    whySofa: String
    reallyFastCar: String
    noStyleForCar: String
end

declare Preferences
    option: String
end

declare Car
    name: String
end


//==================================================================================== RULES ==============================================================================

//guzik uruchamia dialog, dialog czeka za kliknieciem w guzik OK z wybraną przez użytkownika decyzją i wtedy jest tworzony obiekt preferences
//w inicjalizacji jest tylko pobieranie decyzji i zrobienie nowego klienta

//na poczatku uruchamiamy pierwszy dialog. ustalamy pytanie oraz propozycje wyboru. Tworzymy obiekt typu Preferences aby miec dostep do ostatniej decyzji uzytkownika. Wkladamy go do bazy wiedzy.
//tworzymy rowniez nowego klienta z pierwsza preferencja
rule "Initalization"
when
then
String[] myOptions = new String[] {"New cars have no soul","Reliability and convenience bore me","I Guess I'm making some kind of statement about something?","I prefer the style","Love speed hate safety"};
List choices = Arrays.asList(myOptions);
String nextQuestion = "Why do you want a classic?";
//ustawiamy kolejny dialog na podstawie wybranych opcji oraz pytania
ChoiceDialog<String> dialog = createDialog(choices,nextQuestion);
Preferences preferences = new Preferences();
preferences.setOption(getUserChoice(dialog));
insert(preferences);
Client client = new Client();
client.setCares_about(preferences.getOption());
insert(client);

end




//***************************
//HAVE NO SOUL
//***************************
//ODNOSI SIE DO PIERWSZEGO PYTANIA
//na poczatku dialogu w pierwszym pytaniu sprawdzamy tylko preferencje uzytkownika czyli jego wybor
//w sekjci then ustawiamy nowy dialog oraz zapisujemy kolejna, ostatnią odpowiedz Klienta do obiektu typu Preferences -> UPDEJTUJEMY TEN OBIEKT W BAZIE
//no-loop - dzieki temu unikamy zapetlenia sie reguły
rule "New cars have no soul"
no-loop
when
p:Preferences(option=="New cars have no soul")
then
String[] myOptions = new String[] {"Easy: ability to drive off a pier into an Estuary","Synonym for weird","Technically novel","Soul means the Car had an honest job, like a Cop or Cobbie","It means riding in it is like sitting on a Sofa","It means the Car is often starring in Movies","It could mean pure Evil?","Soul is the spirits of 43 dead clowns haunting the Car","Soul is the ability to go a million miles with Su Carbs and Lucas Electrics"};
List choices = Arrays.asList(myOptions);
String nextQuestion="What does soul mean to you?";
ChoiceDialog dialog = createDialog(choices,nextQuestion);
p.setOption(getUserChoice(dialog));
update(p);
end

//kolejne zapytanie -> sprawdzamy zatem aktualnego klienta oraz jego ostatni wybor, poniewaz klient ma juz jakies cechy
//po tym zapytaniu uzytkownik nie bedziemy miec juz wiecej nowych wyborow zatem updejtujemy tylko jego aktualne decyzje w bazie i tyle



rule "Synonym for weird"
no-loop
when p:Preferences(option=="Synonym for weird")
     c: Client(cares_about=="New cars have no soul")
then
     c.setMeaningOfSoul(p.getOption());
     System.out.println("wykonuje sie");
update(c);
end

rule "Client with weird soul"
when c: Client(cares_about=="New cars have no soul") and Client(meaningOfSoul=="Synonym for weird")
then
         Car car = new Car();
         Car car2 = new Car();
         Car car3 = new Car();


         car.setName("BMW Isetta");
         car2.setName("Subaru 360");
         car3.setName("Messerschmidt Kabinroller");

         List cars = new ArrayList();
         cars.add(car);
         cars.add(car2);
         cars.add(car3);



         createInformationDialog(cars);
         insert(car);
         insert(car2);
         insert(car3);
end

rule "Easy: ability to drive off a pier into an Estuary"
no-loop
when p:Preferences(option=="Easy: ability to drive off a pier into an Estuary")
     c: Client(cares_about=="New cars have no soul")
then
     c.setMeaningOfSoul(p.getOption());
     System.out.println("wykonuje sie");
update(c);
end

 //kolejne zapytanie - > sytuacja w ktorej nie ma juz do wyboru zadnych nowych decyzji
 //sprawdzamy cechy naszego klienta i na jego podstawie wybieramy dla niego samochody
rule "Client Easy: ability to drive off a pier into an Estuary"
when c: Client(cares_about=="New cars have no soul") and Client(meaningOfSoul=="Easy: ability to drive off a pier into an Estuary")
then //tutaj wyswietlimy nowe autka
     System.out.println("Mamy dla tego klienta auta s");
     Car car = new Car();
     car.setName("Amphicar");
     insert(car);
     List cars = new ArrayList();
     cars.add(car);


     createInformationDialog(cars);
end



rule "Soul means the Car had an honest job, like a Cop or Cobbie novel"
no-loop
when p:Preferences(option=="Soul means the Car had an honest job, like a Cop or Cobbie")
     c: Client(cares_about=="New cars have no soul")
then
    c.setMeaningOfSoul(p.getOption());
    System.out.println("wykonuje sie");
update(c);
end

 //kolejne zapytanie - > sytuacja w ktorej nie ma juz do wyboru zadnych nowych decyzji
 //sprawdzamy cechy naszego klienta i na jego podstawie wybieramy dla niego samochody
rule "Client Soul means the Car had an honest job, like a Cop or Cobbie"
when c: Client(cares_about=="New cars have no soul") and Client(meaningOfSoul=="Soul means the Car had an honest job, like a Cop or Cobbie")
then
         Car car = new Car();
         Car car2 = new Car();
         Car car3 = new Car();


         car.setName("Ford Crown VIC");
         car2.setName("Dodge Monaco");
         car3.setName("Chevy Caprice");

         List cars = new ArrayList();
         cars.add(car);
         cars.add(car2);
         cars.add(car3);



         createInformationDialog(cars);
         insert(car);
         insert(car2);
         insert(car3);
end



rule "It means the Car is often starring in Movies"
no-loop
when p:Preferences(option=="It means the Car is often starring in Movies")
     c: Client(cares_about=="New cars have no soul")
then
    c.setMeaningOfSoul(p.getOption());
    System.out.println("wykonuje sie");
update(c);
end


rule "Client It means the Car is often starring in Movies"
when c: Client(cares_about=="New cars have no soul") and Client(meaningOfSoul=="It means the Car is often starring in Movies")
then
         Car car = new Car();


         car.setName("Delorean DMC-12");


         List cars = new ArrayList();
         cars.add(car);



         createInformationDialog(cars);
         insert(car);
end


rule "Soul is the spirits of 43 dead clowns haunting the Car"
no-loop
when p:Preferences(option=="Soul is the spirits of 43 dead clowns haunting the Car")
     c: Client(cares_about=="New cars have no soul")
then
    c.setMeaningOfSoul(p.getOption());
    System.out.println("wykonuje sie");
update(c);
end


rule "Client Soul is the spirits of 43 dead clowns haunting the Car"
when c: Client(cares_about=="New cars have no soul") and Client(meaningOfSoul=="Soul is the spirits of 43 dead clowns haunting the Car")
then
         Car car = new Car();


         car.setName("Nash Metropolitian");


         List cars = new ArrayList();
         cars.add(car);



         createInformationDialog(cars);
         insert(car);
end


rule "Soul is the ability to go a million miles with Su Carbs and Lucas Electrics"
no-loop
when p:Preferences(option=="Soul is the ability to go a million miles with Su Carbs and Lucas Electrics")
     c: Client(cares_about=="New cars have no soul")
then
    c.setMeaningOfSoul(p.getOption());

update(c);
end

rule "Client Soul is the ability to go a million miles with Su Carbs and Lucas Electrics"
when c: Client(cares_about=="New cars have no soul") and Client(meaningOfSoul=="Soul is the ability to go a million miles with Su Carbs and Lucas Electrics")
then
         Car car = new Car();


         car.setName("Volvo P1800");


         List cars = new ArrayList();
         cars.add(car);



         createInformationDialog(cars);
         insert(car);

end



rule "It could mean pure Evil?"
no-loop
when p:Preferences(option=="It could mean pure Evil?")
     c: Client(cares_about=="New cars have no soul")
then
    c.setMeaningOfSoul(p.getOption());
    System.out.println("wykonuje sie");
update(c);
end


rule "Client It could mean pure Evil?"
when c: Client(cares_about=="New cars have no soul") and Client(meaningOfSoul=="It could mean pure Evil?")
then
         Car car = new Car();
         Car car2 = new Car();

         car.setName("Plymouth Fury");
         car2.setName("Buick GNX");

         List cars = new ArrayList();
         cars.add(car);
         cars.add(car2);


         createInformationDialog(cars);
         insert(car);
         insert(car2);
end

//----------------------------------------------------------------------------
rule "Technically novel"
no-loop
when p:Preferences(option=="Technically novel")
     c: Client(cares_about=="New cars have no soul")
then

    c.setMeaningOfSoul(p.getOption());
    String[] myOptions = new String[] {"Instead of pistons, some metal Hamantaschen","Can burn cooking oil","Engine in the wrong place (maybe cooled by wrong Stuff)","They thought they were building a plane"};
    List choices = Arrays.asList(myOptions);
    String nextQuestion="Like what?";
    ChoiceDialog dialog = createDialog(choices,nextQuestion);
    p.setOption(getUserChoice(dialog));

update(p);
update(c);
end


rule "Instead of pistons, some metal Hamantaschen"
no-loop
when p:Preferences(option=="Instead of pistons, some metal Hamantaschen")
     c:Client(cares_about=="New cars have no soul") and Client(meaningOfSoul=="Technically novel")
then
    c.setWhyTechnicallyNovel(p.getOption());
    System.out.println("wykonuje sie ");
update(c);
end


rule "Client Instead of pistons, some metal Hamantaschen"
when c: Client(cares_about=="New cars have no soul") and Client(meaningOfSoul=="Technically novel") and Client(whyTechnicallyNovel=="Instead of pistons, some metal Hamantaschen")
then
         Car car = new Car();


         car.setName("Mazda RX7");


         List cars = new ArrayList();
         cars.add(car);



         createInformationDialog(cars);
         insert(car);

end


rule "Engine in the wrong place (maybe cooled by wrong Stuff)"
no-loop
when p:Preferences(option=="Engine in the wrong place (maybe cooled by wrong Stuff)")
     c:Client(cares_about=="New cars have no soul") and Client(meaningOfSoul=="Technically novel")
then
    c.setWhyTechnicallyNovel(p.getOption());
    System.out.println("wykonuje sie ");
update(c);
end


rule "Client Engine in the wrong place (maybe cooled by wrong Stuff)"
when c: Client(cares_about=="New cars have no soul") and Client(meaningOfSoul=="Technically novel") and Client(whyTechnicallyNovel=="Engine in the wrong place (maybe cooled by wrong Stuff)")
then
         Car car = new Car();
         Car car2 = new Car();

         car.setName("Porsche 912");
         car2.setName("Renault Alpine");

         List cars = new ArrayList();
         cars.add(car);
         cars.add(car2);


         createInformationDialog(cars);
         insert(car);
         insert(car2);
end

rule "Can burn cooking oil"
no-loop
when p:Preferences(option=="Can burn cooking oil")
     c:Client(cares_about=="New cars have no soul") and Client(meaningOfSoul=="Technically novel")
then
    c.setWhyTechnicallyNovel(p.getOption());
    System.out.println("wykonuje sie ");
update(c);
end


rule "Client Can burn cooking oil"
when c: Client(cares_about=="New cars have no soul") and Client(meaningOfSoul=="Technically novel") and Client(whyTechnicallyNovel=="Can burn cooking oil")
then
         Car car = new Car();

         car.setName("Mercedes-Benz 300TD");

         List cars = new ArrayList();
         cars.add(car);


         createInformationDialog(cars);
         insert(car);
end


rule "They thought they were building a plane"
no-loop
when p:Preferences(option=="They thought they were building a plane")
     c:Client(cares_about=="New cars have no soul") and Client(meaningOfSoul=="Technically novel")
then
    c.setWhyTechnicallyNovel(p.getOption());
    System.out.println("wykonuje sie ");
update(c);
end


rule "Client They thought they were building a plane"
when c: Client(cares_about=="New cars have no soul") and Client(meaningOfSoul=="Technically novel") and Client(whyTechnicallyNovel=="They thought they were building a plane")
then

         Car car = new Car();

         car.setName("Saab 96");

         List cars = new ArrayList();
         cars.add(car);


         createInformationDialog(cars);
         insert(car);

end




rule "It means riding in it is like sitting on a Sofa"
no-loop
when p:Preferences(option=="It means riding in it is like sitting on a Sofa")
     c: Client(cares_about=="New cars have no soul")
then



    c.setMeaningOfSoul(p.getOption());
    String[] myOptions = new String[] {"Yes"};
    List choices = Arrays.asList(myOptions);
    String nextQuestion="A huge, fast FWD Sofa?";
    Car car = new Car();

    car.setName("Lincoln Town Car");
     List cars = new ArrayList();
             cars.add(car);
    ChoiceDialog dialog = createDialogAuto(choices,nextQuestion, cars);
//    ChoiceDialog dialog = createDialog(choices,nextQuestion);
    p.setOption(getUserChoice(dialog));


update(p);
update(c);
end


rule "A huge, fast FWD Sofa?"
no-loop
when p:Preferences(option=="Yes")
     c:Client(cares_about=="New cars have no soul") and Client(meaningOfSoul=="It means riding in it is like sitting on a Sofa")
then
    c.setWhySofa(p.getOption());

update(c);
end


rule "Client A huge, fast FWD Sofa?"
when c: Client(cares_about=="New cars have no soul") and Client(meaningOfSoul=="It means riding in it is like sitting on a Sofa") and Client(whySofa=="Yes")
then

         Car car = new Car();

         car.setName("Olds Tornado");

         List cars = new ArrayList();
         cars.add(car);


         createInformationDialog(cars);
         insert(car);

end



rule "No A huge, fast FWD Sofa?"
no-loop
when p:Preferences(option=="Not")
     c:Client(cares_about=="New cars have no soul") and Client(meaningOfSoul=="It means riding in it is like sitting on a Sofa")
then
    c.setWhySofa(p.getOption());
    System.out.println("wykonuje sie Not ");
update(c);
end


rule "Client No A huge, fast FWD Sofa?"
when c: Client(cares_about=="New cars have no soul") and Client(meaningOfSoul=="It means riding in it is like sitting on a Sofa") and Client(whySofa=="Not")
then

end


//***************************
//PREFER STYLE
//***************************
rule "Prefer the style"
no-loop
when
    p:Preferences(option=="I prefer the style")
then
    String[] myOptions = new String[] {"I love chrome and loud shirts","Really slow cars that look fast","I love brass and lanterns","I can only drive cars that are museum-worthy","Working class hero, also beer","Classic German with a touch of pedal confusion"};
    List choices = Arrays.asList(myOptions);
    String nextQuestion="Ok, what kind of style?";
    ChoiceDialog dialog = createDialog(choices,nextQuestion);
    p.setOption(getUserChoice(dialog));
update(p);
end

rule "Love chrome and loud shirts"
no-loop
when p:Preferences(option=="I love chrome and loud shirts")
c: Client(cares_about=="I prefer the style")
then
    c.setKindOfStyle(p.getOption());
    System.out.println("STYLE sie");
update(c);
end

rule "Client who loves chrome"
when c: Client(kindOfStyle=="I love chrome and loud shirts") and Client(cares_about=="I prefer the style")

then
         Car car = new Car();

         car.setName("'57 Chevy Bel Air");

         List cars = new ArrayList();
         cars.add(car);


         createInformationDialog(cars);
         insert(car);
end

rule "Really slow cars that look fast"
no-loop
when p:Preferences(option=="Really slow cars that look fast")
     c: Client(cares_about=="I prefer the style")
then
    c.setKindOfStyle(p.getOption());
    System.out.println("REally slow ");
update(c);
end

rule "Client really slow"
when c: Client(kindOfStyle=="Really slow cars that look fast") and Client(cares_about=="I prefer the style")
then
         Car car = new Car();
         Car car2=new Car();
         Car car3 =new Car();

         car.setName("Opel GT");
         car2.setName("VW Karmann Ghia");
         car3.setName("Renualt Floride");

         List cars = new ArrayList();
         cars.add(car);
         cars.add(car2);
         cars.add(car3);

         createInformationDialog(cars);
         insert(car);
         insert(car2);
         insert(car3);
end




rule "Love brass and lanterns"
no-loop
when p:Preferences(option=="I love brass and lanterns")
     c: Client(cares_about=="I prefer the style")
then
      c.setKindOfStyle(p.getOption());
      System.out.println("I love brass and lanterns ");
update(c);
end


rule "Client who loves brass"
when c: Client(kindOfStyle=="I love brass and lanterns") and Client(cares_about=="I prefer the style")
then
         Car car = new Car();
         Car car2=new Car();


         car.setName("Anything Pre WWI");
         car2.setName("Maybe a Packard?");

         List cars = new ArrayList();
         cars.add(car);
         cars.add(car2);


         createInformationDialog(cars);
         insert(car);
         insert(car2);
end




rule "Working class hero, also beer"
no-loop
when p:Preferences(option=="Working class hero, also beer")
     c: Client(cares_about=="I prefer the style")
then
     c.setKindOfStyle(p.getOption());
     System.out.println(p.getOption());
update(c);
end


rule "Client who Working class hero, also beer"
when c: Client(kindOfStyle=="Working class hero, also beer") and Client(cares_about=="I prefer the style")
then          Car car = new Car();
              car.setName("Ford Mustang");

              List cars = new ArrayList();
              cars.add(car);

              createInformationDialog(cars);
              insert(car);
end


rule "Classic German with a touch of pedal confusion"
no-loop
when p:Preferences(option=="Classic German with a touch of pedal confusion")
     c: Client(cares_about=="I prefer the style")
then
     c.setKindOfStyle(p.getOption());
     System.out.println(p.getOption());
update(c);
end


rule "Client who Classic German with a touch of pedal confusion"
when c: Client(kindOfStyle=="Classic German with a touch of pedal confusion") and Client(cares_about=="I prefer the style")
then
         Car car = new Car();

         car.setName("Audi 100");
         List cars = new ArrayList();
         cars.add(car);

         createInformationDialog(cars);
         insert(car);
end

rule "I can only drive cars that are museum-worthy"
no-loop
when p:Preferences(option=="I can only drive cars that are museum-worthy")
     c: Client(cares_about=="I prefer the style")
then
     c.setKindOfStyle(p.getOption());
     System.out.println(p.getOption());
update(c);
end

         //kolejne zapytanie - > sytuacja w ktorej nie ma juz do wyboru zadnych nowych decyzji
         //sprawdzamy cechy naszego klienta i na jego podstawie wybieramy dla niego samochody
rule "Client who can only drive cars that are museum-worthy"
when c: Client(kindOfStyle=="I can only drive cars that are museum-worthy") and Client(cares_about=="I prefer the style")
then

         Car car = new Car();
         Car car2=new Car();
         Car car3 =new Car();

         car.setName("Citroen DS");
         car2.setName("Lamborghini Miura");
         car3.setName("Cord 812");

         List cars = new ArrayList();
         cars.add(car);
         cars.add(car2);
         cars.add(car3);

         createInformationDialog(cars);
         insert(car);
         insert(car2);
         insert(car3);
end

//***************************************************************8****
//********************"RELIABILITY AND CONVENIENCE BORE ME************
//********************************************************************
rule "Reliability and convenience bore me"
no-loop
when
    p:Preferences(option=="Reliability and convenience bore me")
then
    String[] myOptions = new String[] {"I want to know how cars work","I'm erotically drawn to tow trucks and freeway shoulders"};
    List choices = Arrays.asList(myOptions);
    String nextQuestion="Oh yeah? Why's that?";
    ChoiceDialog dialog = createDialog(choices,nextQuestion);
    p.setOption(getUserChoice(dialog));
update(p);

end

rule "I want to know how cars work"
no-loop
when p:Preferences(option=="I want to know how cars work")
     c: Client(cares_about=="Reliability and convenience bore me")
then
       String[] myOptions = new String[] {"More archaic","Not that archaic","Sounds good"};
       List choices = Arrays.asList(myOptions);
       System.out.println(choices);
       String nextQuestion="So, something really simple?";
       ChoiceDialog dialog =  createDialog(choices,nextQuestion);
        p.setOption(getUserChoice(dialog));
        c.setWhyReliabilityBoreHim(p.getOption());
        update(c);
        update(p);
end

rule "More archaic"
when
     c: Client(cares_about=="Reliability and convenience bore me") and Client(whyReliabilityBoreHim=="More archaic")
then
         Car car = new Car();
         car.setName("Ford model T");
         List cars = new ArrayList();
         cars.add(car);
         createInformationDialog(cars);
         insert(car);
end

rule "Not that archaic"
when
     c: Client(cares_about=="Reliability and convenience bore me") and Client(whyReliabilityBoreHim=="Not that archaic")
then
         Car car = new Car();
         car.setName("Ford model A");
         List cars = new ArrayList();
         cars.add(car);
         createInformationDialog(cars);
         insert(car);
end
rule "Sounds good"
when
     c: Client(cares_about=="Reliability and convenience bore me") and Client(whyReliabilityBoreHim=="Sounds good")
then
         Car car = new Car();
         Car car2=new Car();
         Car car3 =new Car();
         Car car4= new Car();
         car.setName("Citroen 2CV");
         car2.setName("VW Thing");
         car3.setName("Willys Jeep");
         car4.setName("Honda Civic");
         List cars = new ArrayList();
         cars.add(car);
         cars.add(car2);
         cars.add(car3);
         cars.add(car4);
         createInformationDialog(cars);
         insert(car);
         insert(car2);
         insert(car3);
         insert(car4);
end

rule "I'm erotically drawn to tow trucks and freeway shoulders"
no-loop
when p:Preferences(option=="I'm erotically drawn to tow trucks and freeway shoulders")
     c: Client(cares_about=="Reliability and convenience bore me")
then
     String[] myOptions = new String[] {"YES"};
        List choices = Arrays.asList(myOptions);
        String nextQuestion="Also really lovely";
         c.setWhyReliabilityBoreHim(p.getOption());
          Car car = new Car();
          car.setName("Lotus Elan");
         List cars = new ArrayList();
         cars.add(car);
         ChoiceDialog dialog = createDialogAuto(choices,nextQuestion, cars);
          p.setOption(getUserChoice(dialog));

    insert(car);
         update(p);
         update(c);

end

rule "Quick and also really lovely"
no-loop
when
p:Preferences(option=="YES")
     c: Client(cares_about=="Reliability and convenience bore me") and Client(whyReliabilityBoreHim=="I'm erotically drawn to tow trucks and freeway shoulders")
then
     c.setShouldItBeQuick(p.getOption());
     update(c);
end



rule "Client who wants quick and really lovely car"
when
     c: Client(cares_about=="Reliability and convenience bore me") and Client(whyReliabilityBoreHim=="I'm erotically drawn to tow trucks and freeway shoulders")
     and Client(shouldItBeQuick=="YES")
then
         Car car = new Car();
         car.setName("Alfa Romeo Giulia Super");
         List cars = new ArrayList();
         cars.add(car);
         createInformationDialog(cars);
         insert(car);
end



//******************************************
//---------------- I GUESS BLA BLA -----------
//*******************************************


rule "I Guess I'm making some kind of statement about something?"
no-loop
when
p:Preferences(option=="I Guess I'm making some kind of statement about something?")
then
String[] myOptions = new String[] {"I'm really rich but like to pretend I'm still a hippie",
"The mothership left me in Paris", "I run an NYC-Themed diner in Las Vegas", "I live dangerously and nader can suck it",
"I will only drive vehicles with two distinct luggage areas", "I'm a Kook. An AMERICAN Kook.",
"I take driving seriously and have the gloves to prove it", "My wallet is on the chain", "I'm a refugee from an alternate future with zeppelins and shit",
"I like being part of a massive automotive subculture", "I hate people knowing what i drive", "I kinda wanted a motorcycle but i have no balance"};
List choices = Arrays.asList(myOptions);
String nextQuestion="What does soul mean to you?";
ChoiceDialog dialog = createDialog(choices,nextQuestion);
p.setOption(getUserChoice(dialog));
update(p);
end
//1
rule "I'm really rich but like to pretend I'm still a hippie"
no-loop
when
p:Preferences(option=="I'm really rich but like to pretend I'm still a hippie")
     c: Client(cares_about=="I Guess I'm making some kind of statement about something?")
then
     c.setStatement(p.getOption());
     update(c);
end

rule "Client - I'm really rich but like to pretend I'm still a hippie"
when
    c: Client(cares_about=="I Guess I'm making some kind of statement about something?") and Client(statement=="I'm really rich but like to pretend I'm still a hippie")
then
         Car car = new Car();
         car.setName("VW Type 2 Microbus");
         List cars = new ArrayList();
         cars.add(car);
         createInformationDialog(cars);
         insert(car);
end
//2

rule "The mothership left me in Paris"
no-loop
when
p:Preferences(option=="The mothership left me in Paris")
     c: Client(cares_about=="I Guess I'm making some kind of statement about something?")
then
     c.setStatement(p.getOption());
     update(c);
end

rule "Client - The mothership left me in Paris"
when
    c: Client(cares_about=="I Guess I'm making some kind of statement about something?") and Client(statement=="The mothership left me in Paris")
then
         Car car = new Car();
         car.setName("Citroen SM");
         List cars = new ArrayList();
         cars.add(car);
         createInformationDialog(cars);
         insert(car);
end
//3
rule "I run an NYC-Themed diner in Las Vegas"
no-loop
when
p:Preferences(option=="I run an NYC-Themed diner in Las Vegas")
     c: Client(cares_about=="I Guess I'm making some kind of statement about something?")
then
     c.setStatement(p.getOption());
     update(c);
end

rule "Client - I run an NYC-Themed diner in Las Vegas"
when
    c: Client(cares_about=="I Guess I'm making some kind of statement about something?") and Client(statement=="I run an NYC-Themed diner in Las Vegas")
then
         Car car = new Car();
         car.setName("Checker Marathon");
         List cars = new ArrayList();
         cars.add(car);
         createInformationDialog(cars);
         insert(car);
end
//4
rule "I live dangerously and nader can suck it"
no-loop
when
p:Preferences(option=="I live dangerously and nader can suck it")
     c: Client(cares_about=="I Guess I'm making some kind of statement about something?")
then
     c.setStatement(p.getOption());
     update(c);
end

rule "Client - I live dangerously and nader can suck it"
when
    c: Client(cares_about=="I Guess I'm making some kind of statement about something?") and Client(statement=="I live dangerously and nader can suck it")
then
         Car car = new Car();
         car.setName("Chevy Corvair");
         List cars = new ArrayList();
         cars.add(car);
         createInformationDialog(cars);
         insert(car);
end
//5
rule "I will only drive vehicles with two distinct luggage areas"
no-loop
when
p:Preferences(option=="I will only drive vehicles with two distinct luggage areas")
     c: Client(cares_about=="I Guess I'm making some kind of statement about something?")
then

 String[] myOptions = new String[] {"YES"};
    List choices = Arrays.asList(myOptions);
    String nextQuestion="Something faster?";
     c.setStatement(p.getOption());
      Car car = new Car();
      car.setName("VW Type III");
     List cars = new ArrayList();
     cars.add(car);
     ChoiceDialog dialog = createDialogAuto(choices,nextQuestion, cars);
      p.setOption(getUserChoice(dialog));

insert(car);
     update(p);
     update(c);
end

rule "I will only drive vehicles with two distinct luggage areas - FASTER"
no-loop
when
p:Preferences(option=="YES")
     c: Client(cares_about=="I Guess I'm making some kind of statement about something?") and Client(statement=="I will only drive vehicles with two distinct luggage areas")
then

 String[] myOptions = new String[] {"YES"};
    List choices = Arrays.asList(myOptions);
    String nextQuestion="Even Faster?";
     c.setReallyFastCar(p.getOption());
      Car car = new Car();
      car.setName("Porsche 914");
     List cars = new ArrayList();
     cars.add(car);
     ChoiceDialog dialog = createDialogAuto(choices,nextQuestion, cars);
      p.setOption(getUserChoice(dialog));
    insert(car);

     update(p);
     update(c);
end

rule "I will only drive vehicles with two distinct luggage areas - EVEN FASTER"
when
    c: Client(cares_about=="I Guess I'm making some kind of statement about something?") and Client(statement=="I will only drive vehicles with two distinct luggage areas") and Client(reallyFastCar=="YES")
then
         Car car = new Car();
         car.setName("De Tomaso Mangusta");
         List cars = new ArrayList();
         cars.add(car);
         createInformationDialog(cars);
         insert(car);
end
//6
rule "I'm a Kook. An AMERICAN Kook."
no-loop
when
p:Preferences(option=="I'm a Kook. An AMERICAN Kook.")
     c: Client(cares_about=="I Guess I'm making some kind of statement about something?")
then
     c.setStatement(p.getOption());
     update(c);
end

rule  "Client -I'm a Kook. An AMERICAN Kook."
when
    c: Client(cares_about=="I Guess I'm making some kind of statement about something?") and Client(statement=="I'm a Kook. An AMERICAN Kook.")
then
         Car car = new Car();
         Car car2 = new Car();
         Car car3= new Car();
         car.setName("AMC Pacer");
         car2.setName("AMC Gremlin");
         car3.setName("AMC AMX");
         List cars = new ArrayList();
         cars.add(car);
         cars.add(car2);
         cars.add(car3);
         createInformationDialog(cars);
         insert(car);
         insert(car2);
         insert(car3);
end
///7

rule "I take driving seriously and have the gloves to prove it"
no-loop
when
p:Preferences(option=="I take driving seriously and have the gloves to prove it")
     c: Client(cares_about=="I Guess I'm making some kind of statement about something?")
then
     c.setStatement(p.getOption());
     update(c);
end

rule  "Client I take driving seriously and have the gloves to prove it"
when
    c: Client(cares_about=="I Guess I'm making some kind of statement about something?") and Client(statement=="I take driving seriously and have the gloves to prove it")
then
         Car car = new Car();
         Car car2 = new Car();
         car.setName("BMW E30");
         car2.setName("Porsche 911");
         List cars = new ArrayList();
         cars.add(car);
         cars.add(car2);
         createInformationDialog(cars);
         insert(car);
         insert(car2);
end
//8

rule "My wallet is on the chain"
no-loop
when
p:Preferences(option=="My wallet is on the chain")
     c: Client(cares_about=="I Guess I'm making some kind of statement about something?")
then

 String[] myOptions = new String[] {"YES"};
    List choices = Arrays.asList(myOptions);
    String nextQuestion="Not for style, I'm tired of losing it";
     c.setStatement(p.getOption());
      Car car = new Car();
      Car car2 = new Car();
      car.setName("Ford Falcon");
      car2.setName("Plymouth Valiant");
     List cars = new ArrayList();
     cars.add(car);
     cars.add(car2);
     ChoiceDialog dialog = createDialogAuto(choices,nextQuestion, cars);
      p.setOption(getUserChoice(dialog));
    insert(car);
    insert(car2);

     update(p);
     update(c);
end

rule "Not for style, I'm tired of losing it"
no-loop
when
p:Preferences(option=="YES")
     c: Client(cares_about=="I Guess I'm making some kind of statement about something?") and Client(statement=="My wallet is on the chain")
then
System.out.println("wykonalem sie");
     c.setNoStyleForCar(p.getOption());
     update(c);
end

rule "Client Not for style, I'm tired of losing it"
when
    c: Client(cares_about=="I Guess I'm making some kind of statement about something?") and Client(statement=="My wallet is on the chain")
    and Client(noStyleForCar=="YES")
then
         Car car = new Car();
         car.setName("Rambler American");
         List cars = new ArrayList();
         cars.add(car);
         createInformationDialog(cars);
         insert(car);
end
//9

rule "I'm a refugee from an alternate future with zeppelins and shit"
no-loop
when
p:Preferences(option=="I'm a refugee from an alternate future with zeppelins and shit")
     c: Client(cares_about=="I Guess I'm making some kind of statement about something?")
then
     c.setStatement(p.getOption());
     update(c);
end

rule "Client -I'm a refugee from an alternate future with zeppelins and shit"
when
    c: Client(cares_about=="I Guess I'm making some kind of statement about something?") and Client(statement=="I'm a refugee from an alternate future with zeppelins and shit")
then
         Car car = new Car();
         car.setName("Tatra T87");
         List cars = new ArrayList();
         cars.add(car);
         createInformationDialog(cars);
         insert(car);
end
//10

rule "I like being part of a massive automotive subculture"
no-loop
when
p:Preferences(option=="I like being part of a massive automotive subculture")
     c: Client(cares_about=="I Guess I'm making some kind of statement about something?")
then
     c.setStatement(p.getOption());
     update(c);
end

rule "Client -I like being part of a massive automotive subculture"
when
    c: Client(cares_about=="I Guess I'm making some kind of statement about something?") and Client(statement=="I like being part of a massive automotive subculture")
then
         Car car = new Car();
         Car car2 = new Car();
         Car car3 = new Car();
         Car car4 = new Car();
         Car car5 = new Car();
         car.setName("VW Beetle");
         car2.setName("BMW 2002");
         car3.setName("MGB");
         car4.setName("Datsun 240Z");
         car5.setName("Volvo 240");
         List cars = new ArrayList();
         cars.add(car);
         cars.add(car2);
         cars.add(car3);
         cars.add(car4);
         cars.add(car5);
         createInformationDialog(cars);
         insert(car);
         insert(car2);
         insert(car3);
         insert(car4);
         insert(car5);
end
//11


rule "I hate people knowing what i drive"
no-loop
when
p:Preferences(option=="I hate people knowing what i drive")
     c: Client(cares_about=="I Guess I'm making some kind of statement about something?")
then
     c.setStatement(p.getOption());
     update(c);
end

rule "Client -I hate people knowing what i drive"
when
    c: Client(cares_about=="I Guess I'm making some kind of statement about something?") and Client(statement=="I hate people knowing what i drive")
then
         Car car = new Car();
         Car car2 = new Car();
         Car car3 = new Car();
         car.setName("Sterling 825");
         car2.setName("Mitsubishi Starion");
         car3.setName("Isuzu I-Mark");
         List cars = new ArrayList();
         cars.add(car);
         cars.add(car2);
         cars.add(car3);
         createInformationDialog(cars);
         insert(car);
         insert(car2);
         insert(car3);
end
//12

rule "I kinda wanted a motorcycle but i have no balance"
no-loop
when
p:Preferences(option=="I kinda wanted a motorcycle but i have no balance")
     c: Client(cares_about=="I Guess I'm making some kind of statement about something?")
then
     c.setStatement(p.getOption());
     update(c);
end

rule "Client - I kinda wanted a motorcycle but i have no balance"
when
    c: Client(cares_about=="I Guess I'm making some kind of statement about something?") and Client(statement=="I kinda wanted a motorcycle but i have no balance")
then
         Car car = new Car();
         car.setName("Lotus 7");
         List cars = new ArrayList();
         cars.add(car);
         createInformationDialog(cars);
         insert(car);
end
//**************************************************************************** FINISHED ' I GUESS ' PATH *******************************************************************************

//-------------------------------------------------------------------FUNCKJE-------------------------------------------------------------------------------------------------------

//tworzy kolejny dialog na podstawie podanego pytania i listy dostepnych wyborow
function ChoiceDialog createDialog(List myChoices,String nextQuestion){
    ChoiceDialog<String> dialog = new ChoiceDialog<>(myChoices.get(0).toString(), myChoices);
    dialog.setTitle("Car Asisstant");
    dialog.setHeaderText(nextQuestion);
    dialog.setContentText("Type an answer:");
    return dialog;

}
//pobiera kolejna preferencje uzytkownika
function String getUserChoice(ChoiceDialog dialog){
    Optional<String> wynik= dialog.showAndWait();
        if (wynik.isPresent()){
            System.out.println("Your choice: " + wynik.get());
        }
        return wynik.get();
}
function void createInformationDialog(List cars) {
Alert alert = new Alert(Alert.AlertType.INFORMATION);
alert.setTitle("Information Dialog");
alert.setHeaderText("We found these cars for you!");
String information="";
for (int i =0; i<cars.size(); i++){
Car car = (Car)cars.get(i);
information+="Car: " + car.getName()+"\n";
}
alert.setContentText(information);
alert.showAndWait();
}
function ChoiceDialog createDialogAuto(List myChoices,String nextQuestion, List cars){
    ChoiceDialog<String> dialog = new ChoiceDialog<>(myChoices.get(0).toString(), myChoices);
    dialog.setTitle("Car Asisstant");
    String information="";
    for (int i =0; i<cars.size(); i++){
    Car car = (Car)cars.get(i);
    information+="Car: " + car.getName()+"\n";
    }
    dialog.setHeaderText(information);
    dialog.setContentText(nextQuestion);
    return dialog;

}