package com.drools;

import java.util.ArrayList
import javafx.scene.control.ChoiceDialog
import java.util.Optional
import javafx.scene.control.Label
import java.util.List
import java.util.Arrays
import com.jfoenix.controls.JFXButton

global com.jfoenix.controls.JFXButton nextButton

//======================================================================================DEKLARACJE KLAS=================================================================
declare Client
    cares_about : String
    meaningOfSoul: String
end

declare Preferences
    option: String
end

declare Car
    name: String
    brand: String
end


//==================================================================================== RULES ==============================================================================

//na poczatku uruchamiamy pierwszy dialog. ustalamy pytanie oraz propozycje wyboru. Tworzymy obiekt typu Preferences aby miec dostep do ostatniej decyzji uzytkownika. Wkladamy go do bazy wiedzy.
//tworzymy rowniez nowego klienta z pierwsza preferencja
rule "Initalization"
when
then
String[] myOptions = new String[] {"New cars have no soul","Elem2","Elem3","Elem4","Elem5"};
List choices = Arrays.asList(myOptions);
String nextQuestion = "Why do you want a classic?";
//ustawiamy kolejny dialog na podstawie wybranych opcji oraz pytania
ChoiceDialog<String> dialog = createDialog(choices,nextQuestion);
Preferences preferences = new Preferences();
preferences.setOption(getUserChoice(dialog));
insert(preferences);

Client client = new Client();
client.setCares_about(preferences.getOption());
insert(client);

end
//ODNOSI SIE DO PIERWSZEGO PYTANIA
//na poczatku dialogu w pierwszym pytaniu sprawdzamy tylko preferencje uzytkownika czyli jego wybor
//w sekjci then ustawiamy nowy dialog oraz zapisujemy kolejna, ostatnią odpowiedz Klienta do obiektu typu Preferences -> UPDEJTUJEMY TEN OBIEKT W BAZIE
//no-loop - dzieki temu unikamy zapetlenia sie reguły
rule "New cars have no soul"
no-loop
when
p:Preferences(option=="New cars have no soul")
then
String[] myOptions = new String[] {"gowno","Synonym for weird","Ehgh","Elem4","Elem5"};
List choices = Arrays.asList(myOptions);
String nextQuestion="What does soul mean to you?";
ChoiceDialog dialog = createDialog(choices,nextQuestion);
p.setOption(getUserChoice(dialog));
update(p);
end

//kolejne zapytanie -> sprawdzamy zatem aktualnego klienta oraz jego ostatni wybor, poniewaz klient ma juz jakies cechy
//po tym zapytaniu uzytkownik nie bedziemy miec juz wiecej nowych wyborow zatem updejtujemy tylko jego aktualne decyzje w bazie i tyle
 rule "Synonym for weird"
 no-loop
 when p:Preferences(option=="Synonym for weird")
 c: Client(cares_about=="New cars have no soul")
 then
c.setMeaningOfSoul(p.getOption());
System.out.println("wykonuje sie");
update(c);
 end

//kolejne zapytanie - > sytuacja w ktorej nie ma juz do wyboru zadnych nowych decyzji
//sprawdzamy cechy naszego klienta i na jego podstawie wybieramy dla niego samochody
rule "Client with weird soul"
when c: Client(cares_about=="New cars have no soul") and Client(meaningOfSoul=="Synonym for weird")
then //tutaj wyswietlimy nowe autka
System.out.println("Mamy dla tego klienta 3 auta");
//TODO - NOWE GUI DIALOG KTORE BEDZIE WYSWIETLAC WYNIKI
 end

//-------------------------------------------------------------------FUNCKJE-------------------------------------------------------------------------------------------------------

//tworzy kolejny dialog na podstawie podanego pytania i listy dostepnych wyborow
function ChoiceDialog createDialog(List myChoices,String nextQuestion){
    ChoiceDialog<String> dialog = new ChoiceDialog<>(myChoices.get(0).toString(), myChoices);
    dialog.setTitle("Car Asisstant");
    dialog.setHeaderText(nextQuestion);
    dialog.setContentText("Type an answer:");
    return dialog;

}
//pobiera kolejna preferencje uzytkownika
function String getUserChoice(ChoiceDialog dialog){
    Optional<String> wynik= dialog.showAndWait();
        if (wynik.isPresent()){
            System.out.println("Your choice: " + wynik.get());
        }
        return wynik.get();
}