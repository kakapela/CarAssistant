package com.drools;

import java.util.ArrayList
import javafx.scene.control.ChoiceDialog
import java.util.Optional
import javafx.scene.control.Label
import java.util.List
import java.util.Arrays
import com.jfoenix.controls.JFXButton
import javafx.scene.control.Alert
import javafx.util.Pair
import javafx.scene.control.Dialog
import javafx.scene.image.ImageView
import javafx.scene.control.ButtonType
import javafx.scene.control.ButtonBar
import javafx.scene.layout.GridPane
import javafx.geometry.Insets
import javafx.scene.control.TextField
import javafx.scene.control.PasswordField
import javafx.scene.Node
import javafx.application.Platform
import javafx.scene.image.Image
import javafx.scene.paint.Color
import javafx.scene.text.Font
import javafx.scene.control.CheckBox
import javafx.scene.control.Button
import javafx.event.EventHandler
import javafx.scene.input.MouseEvent


//======================================================================================DEKLARACJE KLAS=================================================================
declare Client
    cares_about : String
    meaningOfSoul: String
    kindOfStyle: String
    statement:String
    whyTechnicallyNovel: String
    whyReliabilityBoreHim: String
    shouldItBeQuick: String
    whySofa: String
    reallyFastCar: String
    noStyleForCar: String
    whySpeed: String
    whyDeath: String
    whyLoveSpeed: String
end



declare Fact
 answer: String
  question: String
end

declare Car
    name: String
end


//==================================================================================== RULES ==============================================================================

//guzik uruchamia dialog, dialog czeka za kliknieciem w guzik OK z wybraną przez użytkownika decyzją i wtedy jest tworzony obiekt preferences
//w inicjalizacji jest tylko pobieranie decyzji i zrobienie nowego klienta

//na poczatku uruchamiamy pierwszy dialog. ustalamy pytanie oraz propozycje wyboru. Tworzymy obiekt typu Fact aby miec dostep do ostatniej decyzji uzytkownika. Wkladamy go do bazy wiedzy.
//tworzymy rowniez nowego klienta z pierwsza preferencja
rule "Initalization"
when
then
String[] myanswers = new String[] {"New cars have no soul","Reliability and convenience bore me","I Guess I'm making some kind of statement about something?","I prefer the style","Love speed hate safety"};
List choices = Arrays.asList(myanswers);
String nextQuestion = "Why do you want a classic?";
//ustawiamy kolejny dialog na podstawie wybranych opcji oraz pytania
ChoiceDialog<String> dialog = createDialog(choices,nextQuestion);
Fact fact1 = new Fact();
fact1.setQuestion("Why do you want a classic?");
fact1.setAnswer(getUserChoice(dialog));

insert(fact1);
end




//***************************
//HAVE NO SOUL
//***************************
//ODNOSI SIE DO PIERWSZEGO PYTANIA
//na poczatku dialogu w pierwszym pytaniu sprawdzamy tylko preferencje uzytkownika czyli jego wybor
//w sekjci then ustawiamy nowy dialog oraz zapisujemy kolejna, ostatnią odpowiedz Klienta do obiektu typu Fact -> UPDEJTUJEMY TEN OBIEKT W BAZIE
//no-loop - dzieki temu unikamy zapetlenia sie reguły



rule "New cars have no soul"
no-loop
when
f:Fact(answer=="New cars have no soul") and Fact (question=="Why do you want a classic?")
then
String[] myanswers = new String[] {"Easy: ability to drive off a pier into an Estuary","Synonym for weird","Technically novel","Soul means the Car had an honest job, like a Cop or Cobbie","It means riding in it is like sitting on a Sofa","It means the Car is often starring in Movies","It could mean pure Evil?","Soul is the spirits of 43 dead clowns haunting the Car","Soul is the ability to go a million miles with Su Carbs and Lucas Electrics"};
List choices = Arrays.asList(myanswers);
String nextQuestion="What does soul mean to you?";
ChoiceDialog dialog = createDialog(choices,nextQuestion);
System.out.println("FACT");
Fact fact2 = new Fact();
fact2.setQuestion(nextQuestion);
fact2.setAnswer(getUserChoice(dialog));

insert(fact2);
end





rule "Synonym for weird"
no-loop
when p:Fact( answer =="Synonym for weird") and Fact(question=="What does soul mean to you?")
     f:Fact(answer=="New cars have no soul") and Fact (question=="Why do you want a classic?")

then
         Car car = new Car();
         Car car2 = new Car();
         Car car3 = new Car();


         car.setName("BMW Isetta");
         car2.setName("Subaru 360");
         car3.setName("Messerschmidt Kabinroller");

         List cars = new ArrayList();
         cars.add(car);
         cars.add(car2);
         cars.add(car3);
         createInformationDialog(cars);
         insert(car);
         insert(car2);
         insert(car3);

end



rule "Easy: ability to drive off a pier into an Estuary"
no-loop
when p:Fact( answer =="Easy: ability to drive off a pier into an Estuary") and Fact(question=="What does soul mean to you?")
f:Fact(answer=="New cars have no soul") and Fact (question=="Why do you want a classic?")
then
        Car car = new Car();
        car.setName("Amphicar");
        insert(car);
        List cars = new ArrayList();
        cars.add(car);


        createInformationDialog(cars);
end






rule "Soul means the Car had an honest job, like a Cop or Cobbie"
when p:Fact( answer =="Soul means the Car had an honest job, like a Cop or Cobbie") and Fact(question=="What does soul mean to you?")
f:Fact(answer=="New cars have no soul") and Fact (question=="Why do you want a classic?")
then
         Car car = new Car();
         Car car2 = new Car();
         Car car3 = new Car();


         car.setName("Ford Crown VIC");
         car2.setName("Dodge Monaco");
         car3.setName("Chevy Caprice");

         List cars = new ArrayList();
         cars.add(car);
         cars.add(car2);
         cars.add(car3);



         createInformationDialog(cars);
         insert(car);
         insert(car2);
         insert(car3);
end





rule "It means the Car is often starring in Movies"
when p:Fact( answer =="It means the Car is often starring in Movies") and Fact(question=="What does soul mean to you?")
     f:Fact(answer=="New cars have no soul") and Fact (question=="Why do you want a classic?")
then
         Car car = new Car();


         car.setName("Delorean DMC-12");


         List cars = new ArrayList();
         cars.add(car);



         createInformationDialog(cars);
         insert(car);
end




rule "Soul is the spirits of 43 dead clowns haunting the Car"
when p:Fact( answer =="Soul is the spirits of 43 dead clowns haunting the Car") and Fact(question=="What does soul mean to you?")
     f:Fact(answer=="New cars have no soul") and Fact (question=="Why do you want a classic?")
then
         Car car = new Car();


         car.setName("Nash Metropolitian");


         List cars = new ArrayList();
         cars.add(car);



         createInformationDialog(cars);
         insert(car);
end




rule "Client Soul is the ability to go a million miles with Su Carbs and Lucas Electrics"
when p:Fact( answer =="Client Soul is the ability to go a million miles with Su Carbs and Lucas Electrics") and Fact(question=="What does soul mean to you?")
     f:Fact(answer=="New cars have no soul") and Fact (question=="Why do you want a classic?")
then
         Car car = new Car();


         car.setName("Volvo P1800");


         List cars = new ArrayList();
         cars.add(car);



         createInformationDialog(cars);
         insert(car);

end




rule "It could mean pure Evil?"
when p:Fact( answer =="It could mean pure Evil") and Fact(question=="What does soul mean to you?")
     f:Fact(answer=="New cars have no soul") and Fact (question=="Why do you want a classic?")
then
         Car car = new Car();
         Car car2 = new Car();

         car.setName("Plymouth Fury");
         car2.setName("Buick GNX");

         List cars = new ArrayList();
         cars.add(car);
         cars.add(car2);


         createInformationDialog(cars);
         insert(car);
         insert(car2);
end

//----------------------------------------------------------------------------
rule "Technically novel"
no-loop
when p:Fact( answer =="Technically novel") and Fact(question=="What does soul mean to you?")
     f:Fact(answer=="New cars have no soul") and Fact (question=="Why do you want a classic?")
then


    String[] myanswers = new String[] {"Instead of pistons, some metal Hamantaschen","Can burn cooking oil","Engine in the wrong place (maybe cooled by wrong Stuff)","They thought they were building a plane"};
    List choices = Arrays.asList(myanswers);
    String nextQuestion="Like what?";
    ChoiceDialog dialog = createDialog(choices,nextQuestion);

        Fact fact = new Fact();
        fact.setAnswer(getUserChoice(dialog));
        fact.setQuestion(nextQuestion);


insert(fact);
end




rule "Instead of pistons, some metal Hamantaschen"
when p:Fact( answer =="Technically novel") and Fact(question=="What does soul mean to you?")
     f:Fact(answer=="New cars have no soul") and Fact (question=="Why do you want a classic?")
     d:Fact(answer=="Instead of pistons, some metal Hamantaschen") and Fact(question=="Like what?")
then
         Car car = new Car();


         car.setName("Mazda RX7");


         List cars = new ArrayList();
         cars.add(car);



         createInformationDialog(cars);
         insert(car);

end




rule "Engine in the wrong place (maybe cooled by wrong Stuff)"
when p:Fact( answer =="Technically novel") and Fact(question=="What does soul mean to you?")
     f:Fact(answer=="New cars have no soul") and Fact (question=="Why do you want a classic?")
     d:Fact(answer=="Engine in the wrong place (maybe cooled by wrong Stuff)") and Fact(question=="Like what?")
then
         Car car = new Car();
         Car car2 = new Car();

         car.setName("Porsche 912");
         car2.setName("Renault Alpine");

         List cars = new ArrayList();
         cars.add(car);
         cars.add(car2);


         createInformationDialog(cars);
         insert(car);
         insert(car2);
end


rule "Client Can burn cooking oil"
when p:Fact( answer =="Technically novel") and Fact(question=="What does soul mean to you?")
     f:Fact(answer=="New cars have no soul") and Fact (question=="Why do you want a classic?")
     d:Fact(answer=="Client Can burn cooking oil") and Fact(question=="Like what?")
then
         Car car = new Car();

         car.setName("Mercedes-Benz 300TD");

         List cars = new ArrayList();
         cars.add(car);


         createInformationDialog(cars);
         insert(car);
end


rule "They thought they were building a plane"
when p:Fact( answer =="Technically novel") and Fact(question=="What does soul mean to you?")
     f:Fact(answer=="New cars have no soul") and Fact (question=="Why do you want a classic?")
     d:Fact(answer=="They thought they were building a plane") and Fact(question=="Like what?")
then

         Car car = new Car();

         car.setName("Saab 96");

         List cars = new ArrayList();
         cars.add(car);


         createInformationDialog(cars);
         insert(car);

end




rule "It means riding in it is like sitting on a Sofa"
no-loop
when  f:Fact(answer=="New cars have no soul") and Fact (question=="Why do you want a classic?")
p:Fact( answer =="It means riding in it is like sitting on a Sofa") and Fact(question=="What does soul mean to you?")

then

    String nextQuestion="A huge, fast FWD Sofa?";
    Car car = new Car();

    car.setName("Lincoln Town Car");
     List cars = new ArrayList();
             cars.add(car);
          String nextAnswer = createDialogWithCarAndQuestion(cars,nextQuestion);
          Fact fact = new Fact();
          fact.setAnswer(nextAnswer);
          fact.setQuestion(nextQuestion);

insert(car);
insert(fact);
end


rule "A huge, fast FWD Sofa?"
no-loop
when f:Fact(answer=="New cars have no soul") and Fact (question=="Why do you want a classic?")
     p:Fact( answer =="It means riding in it is like sitting on a Sofa") and Fact(question=="What does soul mean to you?")
     c:Fact(answer=="YES") and Fact(question=="A huge, fast FWD Sofa?")
then
     Car car = new Car();
        car.setName("Olds Toronado");
         List cars = new ArrayList();
                 cars.add(car);
                 createInformationDialog(cars);
                 insert(car);

end



//***************************
//PREFER STYLE
//***************************
rule "Prefer the style"
no-loop
when
    p:Fact(answer=="I prefer the style") and Fact(question=="Why do you want a classic?")
then
    String[] myanswers = new String[] {"I love chrome and loud shirts","Really slow cars that look fast","I love brass and lanterns","I can only drive cars that are museum-worthy","Working class hero, also beer","Classic German with a touch of pedal confusion"};
    List choices = Arrays.asList(myanswers);
    String nextQuestion="Ok, what kind of style?";
    ChoiceDialog dialog = createDialog(choices,nextQuestion);
    Fact fact = new Fact();
    fact.setAnswer(getUserChoice(dialog));
    fact.setQuestion(nextQuestion);
insert(fact);
end



rule "I love chrome and loud shirts"
when
    p:Fact(answer=="I prefer the style") and Fact(question=="Why do you want a classic?")
     s:Fact(answer=="I love chrome and loud shirts") and Fact(question=="Ok, what kind of style?")
then
         Car car = new Car();

         car.setName("'57 Chevy Bel Air");

         List cars = new ArrayList();
         cars.add(car);


         createInformationDialog(cars);
         insert(car);
end



rule "Really slow cars that look fast"
when
    p:Fact(answer=="I prefer the style") and Fact(question=="Why do you want a classic?")
    b:Fact(answer=="Really slow cars that look fast") and Fact(question=="Ok, what kind of style?")
then
         Car car = new Car();
         Car car2=new Car();
         Car car3 =new Car();

         car.setName("Opel GT");
         car2.setName("VW Karmann Ghia");
         car3.setName("Renualt Floride");

         List cars = new ArrayList();
         cars.add(car);
         cars.add(car2);
         cars.add(car3);

         createInformationDialog(cars);
         insert(car);
         insert(car2);
         insert(car3);
end







rule "Love brass and lanterns"
when
    p:Fact(answer=="I prefer the style") and Fact(question=="Why do you want a classic?")
    b:Fact(answer=="I love brass and lanterns") and Fact(question=="Ok, what kind of style?")
then
         Car car = new Car();
         Car car2=new Car();


         car.setName("Anything Pre WWI");
         car2.setName("Maybe a Packard?");

         List cars = new ArrayList();
         cars.add(car);
         cars.add(car2);


         createInformationDialog(cars);
         insert(car);
         insert(car2);
end







rule "Working class hero, also beer"
when    p:Fact(answer=="I prefer the style") and Fact(question=="Why do you want a classic?")
         b:Fact(answer=="Working class hero, also beer") and Fact(question=="Ok, what kind of style?")
then          Car car = new Car();
              car.setName("Ford Mustang");

              List cars = new ArrayList();
              cars.add(car);

              createInformationDialog(cars);
              insert(car);
end




rule "Classic German with a touch of pedal confusion"
when    p:Fact(answer=="I prefer the style") and Fact(question=="Why do you want a classic?")
         b:Fact(answer=="Classic German with a touch of pedal confusion") and Fact(question=="Ok, what kind of style?")
then
         Car car = new Car();

         car.setName("Audi 100");
         List cars = new ArrayList();
         cars.add(car);

         createInformationDialog(cars);
         insert(car);
end


rule "Client who can only drive cars that are museum-worthy"
when
     p:Fact(answer=="I prefer the style") and Fact(question=="Why do you want a classic?")
         b:Fact(answer=="I can only drive cars that are museum-worthy") and Fact(question=="Ok, what kind of style?")
then

         Car car = new Car();
         Car car2=new Car();
         Car car3 =new Car();

         car.setName("Citroen DS");
         car2.setName("Lamborghini Miura");
         car3.setName("Cord 812");

         List cars = new ArrayList();
         cars.add(car);
         cars.add(car2);
         cars.add(car3);

         createInformationDialog(cars);
         insert(car);
         insert(car2);
         insert(car3);
end

//***************************************************************8****
//********************"RELIABILITY AND CONVENIENCE BORE ME************
//********************************************************************
rule "Reliability and convenience bore me"
no-loop
when
    p:Fact(answer=="Reliability and convenience bore me") and Fact (question=="Why do you want a classic?")
then
    String[] myanswers = new String[] {"I want to know how cars work","I'm erotically drawn to tow trucks and freeway shoulders"};
    List choices = Arrays.asList(myanswers);
    String nextQuestion="Oh yeah? Why's that?";
    ChoiceDialog dialog = createDialog(choices,nextQuestion);
    Fact fact = new Fact();
    fact.setAnswer(getUserChoice(dialog));
    fact.setQuestion(nextQuestion);
    insert(fact);



end

rule "I want to know how cars work"
no-loop
when p:Fact(answer=="I want to know how cars work") and Fact(question=="Oh yeah? Why's that?")
         f:Fact(answer=="Reliability and convenience bore me") and Fact (question=="Why do you want a classic?")
then
       String[] myanswers = new String[] {"More archaic","Not that archaic","Sounds good"};
       List choices = Arrays.asList(myanswers);
       System.out.println(choices);
       String nextQuestion="So, something really simple?";
       ChoiceDialog dialog =  createDialog(choices,nextQuestion);
       Fact fact = new Fact();
        fact.setAnswer(getUserChoice(dialog));
        fact.setQuestion(nextQuestion);
        insert(fact);

end

rule "More archaic"
when
     p:Fact(answer=="I want to know how cars work") and Fact(question=="Oh yeah? Why's that?")
     f:Fact(answer=="Reliability and convenience bore me") and Fact (question=="Why do you want a classic?")
      c:Fact(answer=="More archaic") and Fact (question=="So, something really simple?")

then
         Car car = new Car();
         car.setName("Ford Model T");
         List cars = new ArrayList();
         cars.add(car);
         createInformationDialog(cars);
         insert(car);
end

rule "Not that archaic"
when
          p:Fact(answer=="I want to know how cars work") and Fact(question=="Oh yeah? Why's that?")
          f:Fact(answer=="Reliability and convenience bore me") and Fact (question=="Why do you want a classic?")
           c:Fact(answer=="Not that archaic") and Fact (question=="So, something really simple?")
then
         Car car = new Car();
         car.setName("Ford Model A");
         List cars = new ArrayList();
         cars.add(car);
         createInformationDialog(cars);
         insert(car);
end
rule "Sounds good"
when
               p:Fact(answer=="I want to know how cars work") and Fact(question=="Oh yeah? Why's that?")
               f:Fact(answer=="Reliability and convenience bore me") and Fact (question=="Why do you want a classic?")
                c:Fact(answer=="Sounds good") and Fact (question=="So, something really simple?")
then
         Car car = new Car();
         Car car2=new Car();
         Car car3 =new Car();
         Car car4= new Car();
         car.setName("Citroen 2CV");
         car2.setName("VW Thing");
         car3.setName("Willys Jeep");
         car4.setName("Honda Civic");
         List cars = new ArrayList();
         cars.add(car);
         cars.add(car2);
         cars.add(car3);
         cars.add(car4);
         createInformationDialog(cars);
         insert(car);
         insert(car2);
         insert(car3);
         insert(car4);
end

rule "I'm erotically drawn to tow trucks and freeway shoulders"
no-loop
when p:Fact(answer=="I'm erotically drawn to tow trucks and freeway shoulders")
     c: Client(cares_about=="Reliability and convenience bore me")
then
     String[] myanswers = new String[] {"YES"};
        List choices = Arrays.asList(myanswers);
        String nextQuestion="Also really lovely";
         c.setWhyReliabilityBoreHim(p.getAnswer());
          Car car = new Car();
          car.setName("Lotus Elan");
         List cars = new ArrayList();
         cars.add(car);
         ChoiceDialog dialog = createDialogAuto(choices,nextQuestion, cars);
          p.setAnswer(getUserChoice(dialog));

    insert(car);
         update(p);
         update(c);

end

rule "Quick and also really lovely"
no-loop
when
p:Fact(answer=="YES")
     c: Client(cares_about=="Reliability and convenience bore me") and Client(whyReliabilityBoreHim=="I'm erotically drawn to tow trucks and freeway shoulders")
then
     c.setShouldItBeQuick(p.getAnswer());
     update(c);
end



rule "Client who wants quick and really lovely car"
when
     c: Client(cares_about=="Reliability and convenience bore me") and Client(whyReliabilityBoreHim=="I'm erotically drawn to tow trucks and freeway shoulders")
     and Client(shouldItBeQuick=="YES")
then
         Car car = new Car();
         car.setName("Alfa Romeo Giulia Super");
         List cars = new ArrayList();
         cars.add(car);
         createInformationDialog(cars);
         insert(car);
end



//******************************************
//---------------- I GUESS BLA BLA -----------
//*******************************************


rule "I Guess I'm making some kind of statement about something?"
no-loop
when
p:Fact(answer=="I Guess I'm making some kind of statement about something?") and Fact (question=="Why do you want a classic?")
then
String[] myanswers = new String[] {"I'm really rich but like to pretend I'm still a hippie",
"The mothership left me in Paris", "I run an NYC-Themed diner in Las Vegas", "I live dangerously and nader can suck it",
"I will only drive vehicles with two distinct luggage areas", "I'm a Kook. An AMERICAN Kook.",
"I take driving seriously and have the gloves to prove it", "My wallet is on the chain", "I'm a refugee from an alternate future with zeppelins and shit",
"I like being part of a massive automotive subculture", "I hate people knowing what i drive", "I kinda wanted a motorcycle but i have no balance"};
List choices = Arrays.asList(myanswers);
String nextQuestion="Great. What statement?";
ChoiceDialog dialog = createDialog(choices,nextQuestion);
Fact fact = new Fact();
fact.setAnswer(getUserChoice(dialog));
fact.setQuestion(nextQuestion);
insert(fact);
end
//1
rule "I'm really rich but like to pretend I'm still a hippie"
no-loop
when
p:Fact(answer=="I'm really rich but like to pretend I'm still a hippie") and Fact(question=="Great. What statement?")
     f:Fact(answer=="I Guess I'm making some kind of statement about something?") and Fact (question=="Why do you want a classic?")
then
         Car car = new Car();
         car.setName("VW Type 2 Microbus");
         List cars = new ArrayList();
         cars.add(car);
         createInformationDialog(cars);
         insert(car);
end



rule "The mothership left me in Paris"
when
    p:Fact(answer=="The mothership left me in Paris") and Fact(question=="Great. What statement?")
         f:Fact(answer=="I Guess I'm making some kind of statement about something?") and Fact (question=="Why do you want a classic?")
then
         Car car = new Car();
         car.setName("Citroen SM");
         List cars = new ArrayList();
         cars.add(car);
         createInformationDialog(cars);
         insert(car);
end


rule "I run an NYC-Themed diner in Las Vegas"
when
     p:Fact(answer=="I run an NYC-Themed diner in Las Vegas") and Fact(question=="Great. What statement?")
          f:Fact(answer=="I Guess I'm making some kind of statement about something?") and Fact (question=="Why do you want a classic?")
then
         Car car = new Car();
         car.setName("Checker Marathon");
         List cars = new ArrayList();
         cars.add(car);
         createInformationDialog(cars);
         insert(car);
end


rule "I live dangerously and nader can suck it"
when
         p:Fact(answer=="I live dangerously and nader can suck it") and Fact(question=="Great. What statement?")
              f:Fact(answer=="I Guess I'm making some kind of statement about something?") and Fact (question=="Why do you want a classic?")
then
         Car car = new Car();
         car.setName("Chevy Corvair");
         List cars = new ArrayList();
         cars.add(car);
         createInformationDialog(cars);
         insert(car);
end
//5
rule "I will only drive vehicles with two distinct luggage areas"
no-loop
when
         p:Fact(answer=="I will only drive vehicles with two distinct luggage areas") and Fact(question=="Great. What statement?")
              f:Fact(answer=="I Guess I'm making some kind of statement about something?") and Fact (question=="Why do you want a classic?")
then

 String[] myanswers = new String[] {"YES"};
    List choices = Arrays.asList(myanswers);
    String nextQuestion="Something faster?";
    // c.setStatement(p.getAnswer());
      Car car = new Car();
      car.setName("VW Type III");
     List cars = new ArrayList();
     cars.add(car);
     ChoiceDialog dialog = createDialogAuto(choices,nextQuestion, cars);
      p.setAnswer(getUserChoice(dialog));

insert(car);
     update(p);
 //    update(c);
end

rule "I will only drive vehicles with two distinct luggage areas - FASTER"
no-loop
when
p:Fact(answer=="YES")
     c: Client(cares_about=="I Guess I'm making some kind of statement about something?") and Client(statement=="I will only drive vehicles with two distinct luggage areas")
then

 String[] myanswers = new String[] {"YES"};
    List choices = Arrays.asList(myanswers);
    String nextQuestion="Even Faster?";
     c.setReallyFastCar(p.getAnswer());
      Car car = new Car();
      car.setName("Porsche 914");
     List cars = new ArrayList();
     cars.add(car);
     ChoiceDialog dialog = createDialogAuto(choices,nextQuestion, cars);
      p.setAnswer(getUserChoice(dialog));
    insert(car);

     update(p);
     update(c);
end

rule "I will only drive vehicles with two distinct luggage areas - EVEN FASTER"
when
    c: Client(cares_about=="I Guess I'm making some kind of statement about something?") and Client(statement=="I will only drive vehicles with two distinct luggage areas") and Client(reallyFastCar=="YES")
then
         Car car = new Car();
         car.setName("De Tomaso Mangusta");
         List cars = new ArrayList();
         cars.add(car);
         createInformationDialog(cars);
         insert(car);
end
//6


rule  "I'm a Kook. An AMERICAN Kook."
when
       p:Fact(answer=="I'm a Kook. An AMERICAN Kook.") and Fact(question=="Great. What statement?")
            f:Fact(answer=="I Guess I'm making some kind of statement about something?") and Fact (question=="Why do you want a classic?")
then
         Car car = new Car();
         Car car2 = new Car();
         Car car3= new Car();
         car.setName("AMC Pacer");
         car2.setName("AMC Gremlin");
         car3.setName("AMC AMX");
         List cars = new ArrayList();
         cars.add(car);
         cars.add(car2);
         cars.add(car3);
         createInformationDialog(cars);
         insert(car);
         insert(car2);
         insert(car3);
end


rule  "I take driving seriously and have the gloves to prove it"
when
       p:Fact(answer=="I take driving seriously and have the gloves to prove it") and Fact(question=="Great. What statement?")
            f:Fact(answer=="I Guess I'm making some kind of statement about something?") and Fact (question=="Why do you want a classic?")
then
         Car car = new Car();
         Car car2 = new Car();
         car.setName("BMW E30");
         car2.setName("Porsche 911");
         List cars = new ArrayList();
         cars.add(car);
         cars.add(car2);
         createInformationDialog(cars);
         insert(car);
         insert(car2);
end
//8

rule "My wallet is on the chain"
no-loop
when
       p:Fact(answer=="My wallet is on the chain") and Fact(question=="Great. What statement?")
            f:Fact(answer=="I Guess I'm making some kind of statement about something?") and Fact (question=="Why do you want a classic?")
then

    String nextQuestion="Not for style, I'm tired of losing it";
      Car car = new Car();
      Car car2 = new Car();
      car.setName("Ford Falcon");
      car2.setName("Plymouth Valiant");
     List cars = new ArrayList();
     cars.add(car);
     cars.add(car2);
     String nextAnswer = createDialogWithCarAndQuestion(cars,nextQuestion);
     Fact fact = new Fact();
     fact.setQuestion(nextQuestion);
     fact.setAnswer(nextAnswer);
     insert(fact);
    insert(car);
    insert(car2);

end

rule "Not for style, I'm tired of losing it"
no-loop
when
      p:Fact(answer=="My wallet is on the chain") and Fact(question=="Great. What statement?")
      f:Fact(answer=="I Guess I'm making some kind of statement about something?") and Fact (question=="Why do you want a classic?")
      c: Fact(answer=="YES") and Fact(question=="Not for style, I'm tired of losing it")
then
     Car car = new Car();
            car.setName("Rambler American");
             List cars = new ArrayList();
                     cars.add(car);
                     createInformationDialog(cars);
                     insert(car);

end

rule "Client Not for style, I'm tired of losing it"
when
    c: Client(cares_about=="I Guess I'm making some kind of statement about something?") and Client(statement=="My wallet is on the chain")
    and Client(noStyleForCar=="YES")
then
         Car car = new Car();
         car.setName("Rambler American");
         List cars = new ArrayList();
         cars.add(car);
         createInformationDialog(cars);
         insert(car);
end




rule "I'm a refugee from an alternate future with zeppelins and shit"
when       p:Fact(answer=="I'm a refugee from an alternate future with zeppelins and shit") and Fact(question=="Great. What statement?")
                f:Fact(answer=="I Guess I'm making some kind of statement about something?") and Fact (question=="Why do you want a classic?")
then
         Car car = new Car();
         car.setName("Tatra T87");
         List cars = new ArrayList();
         cars.add(car);
         createInformationDialog(cars);
         insert(car);
end
//10


rule "I like being part of a massive automotive subculture"
when     p:Fact(answer=="I like being part of a massive automotive subculture") and Fact(question=="Great. What statement?")
                    f:Fact(answer=="I Guess I'm making some kind of statement about something?") and Fact (question=="Why do you want a classic?")

then
         Car car = new Car();
         Car car2 = new Car();
         Car car3 = new Car();
         Car car4 = new Car();
         Car car5 = new Car();
         car.setName("VW Beetle");
         car2.setName("BMW 2002");
         car3.setName("MGB");
         car4.setName("Datsun 240Z");
         car5.setName("Volvo 240");
         List cars = new ArrayList();
         cars.add(car);
         cars.add(car2);
         cars.add(car3);
         cars.add(car4);
         cars.add(car5);
         createInformationDialog(cars);
         insert(car);
         insert(car2);
         insert(car3);
         insert(car4);
         insert(car5);
end
//11

rule "Client -I hate people knowing what i drive"
when
    p:Fact(answer=="Client -I hate people knowing what i drive") and Fact(question=="Great. What statement?")
     f:Fact(answer=="I Guess I'm making some kind of statement about something?") and Fact (question=="Why do you want a classic?")

then
         Car car = new Car();
         Car car2 = new Car();
         Car car3 = new Car();
         car.setName("Sterling 825");
         car2.setName("Mitsubishi Starion");
         car3.setName("Isuzu I-Mark");
         List cars = new ArrayList();
         cars.add(car);
         cars.add(car2);
         cars.add(car3);
         createInformationDialog(cars);
         insert(car);
         insert(car2);
         insert(car3);
end
//12



rule "I kinda wanted a motorcycle but i have no balance"
when
        p:Fact(answer=="I kinda wanted a motorcycle but i have no balance") and Fact(question=="Great. What statement?")
         f:Fact(answer=="I Guess I'm making some kind of statement about something?") and Fact (question=="Why do you want a classic?")

then
         Car car = new Car();
         car.setName("Lotus 7");
         List cars = new ArrayList();
         cars.add(car);
         createInformationDialog(cars);
         insert(car);
end
//**************************************************************************** FINISHED ' I GUESS ' PATH *******************************************************************************



//*******************************************************************************************************
//Love speed hate safety
//************************************************************************************************************888


rule "Love speed hate safety"
no-loop
when
p:Fact(answer=="Love speed hate safety") and Fact (question=="Why do you want a classic?")
then
String[] myanswers = new String[] {"Fake is fine","I have a death wish","I love speed and money","Fast and cheap"};
List choices = Arrays.asList(myanswers);
String nextQuestion="Real speed or just feels spedy?";
ChoiceDialog dialog = createDialog(choices,nextQuestion);
Fact fact = new Fact();
fact.setAnswer(getUserChoice(dialog));
fact.setQuestion(nextQuestion);
insert(fact);
end



rule "Fake is fine"
no-loop
when p:Fact(answer=="Fake is fine") and Fact (question=="Real speed or just feels spedy?")
     f:Fact(answer=="Love speed hate safety") and Fact (question=="Why do you want a classic?")
then
         Car car = new Car();
         Car car2 = new Car();
         Car car3 = new Car();
         Car car4 = new Car();


         car.setName("Datsun S10");
         car2.setName("Mini Cooper");
         car3.setName("Mk1 VW Golf GTI");
         car4.setName("Honda CRX");

         List cars = new ArrayList();
         cars.add(car);
         cars.add(car2);
         cars.add(car3);
         cars.add(car4);



         createInformationDialog(cars);
         insert(car);
         insert(car2);
         insert(car3);
         insert(car4);
end


rule "Fast and cheap"
when p:Fact(answer=="Fast and cheap") and Fact (question=="Real speed or just feels spedy?")
          f:Fact(answer=="Love speed hate safety") and Fact (question=="Why do you want a classic?")
then
         Car car = new Car();



         car.setName("Dodge Omni GLH");


         List cars = new ArrayList();
         cars.add(car);




         createInformationDialog(cars);
         insert(car);

end


rule "I have a death wish"
no-loop
when p:Fact(answer=="I have a death wish") and Fact (question=="Real speed or just feels spedy?")
     f:Fact(answer=="Love speed hate safety") and Fact (question=="Why do you want a classic?")
then


         String[] myanswers = new String[] {"Crushed by V8 in tiny space","Electrocuted by wiper switch","Blaze of glory","Car, tree","Run out of talent, off cliff"};
         List choices = Arrays.asList(myanswers);
         String nextQuestion="How do you want to go?";
         ChoiceDialog dialog = createDialog(choices,nextQuestion);
         Fact fact = new Fact();
         fact.setQuestion(nextQuestion);
         fact.setAnswer(getUserChoice(dialog));
         insert(fact);
end


rule "Crushed by V8 in tiny space"
when  p:Fact(answer=="I have a death wish") and Fact (question=="Real speed or just feels spedy?")
          f:Fact(answer=="Love speed hate safety") and Fact (question=="Why do you want a classic?")
                v:Fact(answer=="Crushed by V8 in tiny space") and Fact (question=="How do you want to go?")
then
         Car car = new Car();
         car.setName("Sunbeam Tiger");
         List cars = new ArrayList();
         cars.add(car);
         createInformationDialog(cars);
         insert(car);

end



rule "Electrocuted by wiper switch"
when p:Fact(answer=="I have a death wish") and Fact (question=="Real speed or just feels spedy?")
               f:Fact(answer=="Love speed hate safety") and Fact (question=="Why do you want a classic?")
                     v:Fact(answer=="Electrocuted by wiper switch") and Fact (question=="How do you want to go?")
then
         Car car = new Car();
         car.setName("Jaguar E-Type");
         List cars = new ArrayList();
         cars.add(car);
         createInformationDialog(cars);
         insert(car);

end


rule "Blaze of glory"
when p:Fact(answer=="I have a death wish") and Fact (question=="Real speed or just feels spedy?")
                    f:Fact(answer=="Love speed hate safety") and Fact (question=="Why do you want a classic?")
                          v:Fact(answer=="Blaze of glory") and Fact (question=="How do you want to go?")
then
         Car car = new Car();
         car.setName("Ferrari Testarossa");
         List cars = new ArrayList();
         cars.add(car);
         createInformationDialog(cars);
         insert(car);

end



rule "Run out of talent, off cliff"
when p:Fact(answer=="I have a death wish") and Fact (question=="Real speed or just feels spedy?")
                    f:Fact(answer=="Love speed hate safety") and Fact (question=="Why do you want a classic?")
                          v:Fact(answer=="Run out of talent, off cliff") and Fact (question=="How do you want to go?")
then
         Car car = new Car();
         car.setName("Porsche Spyder");
         List cars = new ArrayList();
         cars.add(car);
         createInformationDialog(cars);
         insert(car);

end


rule "Car, tree"
when p:Fact(answer=="I have a death wish") and Fact (question=="Real speed or just feels spedy?")
                    f:Fact(answer=="Love speed hate safety") and Fact (question=="Why do you want a classic?")
                          v:Fact(answer=="Car, tree") and Fact (question=="How do you want to go?")
then
         Car car = new Car();
         Car car2 = new Car();
         car.setName("Camaro Iroc-Z");
         car2.setName("Plymouth Road Runner");
         List cars = new ArrayList();
         cars.add(car);
         cars.add(car2);
         createInformationDialog(cars);
         insert(car);
         insert(car2);

end


rule "I love speed and money"
no-loop
when p:Fact(answer=="I love speed and money") and Fact (question=="Real speed or just feels spedy?")
         f:Fact(answer=="Love speed hate safety") and Fact (question=="Why do you want a classic?")
then


         String[] myanswers = new String[] {"Some kind of Duke and I rally","My goal is to drive my Childhood bedroom posters","I have a weird Fetish where I like people asking Is it a Replica?"};
         List choices = Arrays.asList(myanswers);
         String nextQuestion="Great, who are you?";
         ChoiceDialog dialog = createDialog(choices,nextQuestion);
         Fact fact = new Fact();
         fact.setQuestion(nextQuestion);
         fact.setAnswer(getUserChoice(dialog));
         insert(fact);


end

rule "Some kind of Duke and I rally"
no-loop
when p:Fact(answer=="I love speed and money") and Fact (question=="Real speed or just feels spedy?")
         f:Fact(answer=="Love speed hate safety") and Fact (question=="Why do you want a classic?")
             v:Fact(answer=="Some kind of Duke and I rally") and Fact (question=="Great, who are you?")
then
         Car car = new Car();
         car.setName("Lancia Stratos");
         List cars = new ArrayList();
         cars.add(car);
         createInformationDialog(cars);
         insert(car);
end



rule "My goal is to drive my Childhood bedroom posters"
when p:Fact(answer=="I love speed and money") and Fact (question=="Real speed or just feels spedy?")
         f:Fact(answer=="Love speed hate safety") and Fact (question=="Why do you want a classic?")
             v:Fact(answer=="My goal is to drive my Childhood bedroom posters") and Fact (question=="Great, who are you?")
then
         Car car = new Car();
         Car car2= new Car();
         car.setName("Lamborghini Countach");
         car2.setName("Ferrari 250 GTO");
         List cars = new ArrayList();
         cars.add(car);
         cars.add(car2);
         createInformationDialog(cars);
         insert(car);
         insert(car2);
end


rule "I have a weird Fetish where I like people asking Is it a Replica?"
when p:Fact(answer=="I love speed and money") and Fact (question=="Real speed or just feels spedy?")
         f:Fact(answer=="Love speed hate safety") and Fact (question=="Why do you want a classic?")
             v:Fact(answer=="I have a weird Fetish where I like people asking Is it a Replica?") and Fact (question=="Great, who are you?")
then
         Car car = new Car();
         Car car2= new Car();
         car.setName("AC Cobra");
         car2.setName("Porsche 356 Speedster");
         List cars = new ArrayList();
         cars.add(car);
         cars.add(car2);
         createInformationDialog(cars);
         insert(car);
         insert(car2);

end













//-------------------------------------------------------------------FUNCKJE-------------------------------------------------------------------------------------------------------

//tworzy kolejny dialog na podstawie podanego pytania i listy dostepnych wyborow
function ChoiceDialog createDialog(List myChoices,String nextQuestion){
    ChoiceDialog<String> dialog = new ChoiceDialog<>(myChoices.get(0).toString(), myChoices);
    dialog.setTitle("Car Asisstant");
    dialog.setHeaderText(nextQuestion);
    dialog.setContentText("Type an answer:");
    return dialog;

}
//pobiera kolejna preferencje uzytkownika
function String getUserChoice(ChoiceDialog dialog){
    Optional<String> wynik= dialog.showAndWait();
        if (wynik.isPresent()){
            System.out.println("Your choice: " + wynik.get());
        }
        return wynik.get();
}
function void createInformationDialog(List cars) {
Alert alert = new Alert(Alert.AlertType.INFORMATION);
alert.setTitle("Information Dialog");
alert.setHeaderText("We found these cars for you!");
String information="";
for (int i =0; i<cars.size(); i++){
Car car = (Car)cars.get(i);
information+="Car: " + car.getName()+"\n";
}
alert.setContentText(information);
alert.showAndWait();
}
function ChoiceDialog createDialogAuto(List myChoices,String nextQuestion, List cars){
    ChoiceDialog<String> dialog = new ChoiceDialog<>(myChoices.get(0).toString(), myChoices);
    dialog.setTitle("Car Asisstant");
    String information="";
    for (int i =0; i<cars.size(); i++){
    Car car = (Car)cars.get(i);
    information+="Car: " + car.getName()+"\n";
    }
    dialog.setHeaderText(information);
    dialog.setContentText(nextQuestion);
    return dialog;

}
function String createDialogWithCarAndQuestion(List cars,String nextQuestion){
String nextAnswer="";

Alert alert = new Alert(Alert.AlertType.CONFIRMATION);
alert.setTitle("Car Assistant");
alert.setHeaderText("We found these cars for you! ");

String information="";
for (int i =0; i<cars.size(); i++){
    Car car = (Car)cars.get(i);
    information+="Car: " + car.getName()+"\n";
    }

GridPane grid = new GridPane();
grid.setHgap(3);
grid.setVgap(2);
grid.setPadding(new Insets(20, 15, 20, 15));

Label info = new Label();
info.setText(information);
info.setFont(new Font("Cambria", 20));
info.setTextFill(Color.web("#228B22"));
 grid.add(info,0,0);


 Label question = new Label();
 question.setText("Question: " + nextQuestion);
question.setFont(new Font("Cambria", 20));
question.setTextFill(Color.web("#DC143C"));
 grid.add(question,3,3);


alert.getDialogPane().getButtonTypes().removeAll(ButtonType.OK,ButtonType.CANCEL);
ButtonType next = new ButtonType("Yes",ButtonBar.ButtonData.OK_DONE);
ButtonType finish= new ButtonType("No, Finish",ButtonBar.ButtonData.OK_DONE);

alert.getDialogPane().getButtonTypes().addAll(next,finish);


alert.getDialogPane().setContent(grid);


Optional<ButtonType> result = alert.showAndWait();
if (result.get() == next){
nextAnswer="YES";

}
else
nextAnswer="NO";
System.out.println("Twoja decyzja to " + nextAnswer);
return  nextAnswer;
}